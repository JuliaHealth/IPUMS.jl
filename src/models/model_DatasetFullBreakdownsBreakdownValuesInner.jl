# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


"""
```
DatasetFullBreakdownsBreakdownValuesInner(;
    name=nothing,
    description=nothing,
)
```
Inner constructor representing the variables within a DatasetFull object.

# Arguments

- `name::String`-The dataset identifier 
- `description::String`- a short description of the dataset

#Returns

This returns an inner constructor.

# Examples
```julia-repl
julia> IPUMS.DatasetFullBreakdownsBreakdownValuesInner(name = "1790_cPop",description = "1790 Census: Population Data [US, States & Counties]")
{
  "name": "1790_cPop",
  "description": "1790 Census: Population Data [US, States & Counties]"
}
```
# References
To find out more about the Dataset type visit the link:
* https://developer.ipums.org/docs/v2/workflows/explore_metadata/nhgis/datasets/

"""
Base.@kwdef mutable struct DatasetFullBreakdownsBreakdownValuesInner <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing

    function DatasetFullBreakdownsBreakdownValuesInner(name, description, )
        OpenAPI.validate_property(DatasetFullBreakdownsBreakdownValuesInner, Symbol("name"), name)
        OpenAPI.validate_property(DatasetFullBreakdownsBreakdownValuesInner, Symbol("description"), description)
        return new(name, description, )
    end
end # type DatasetFullBreakdownsBreakdownValuesInner

const _property_types_DatasetFullBreakdownsBreakdownValuesInner = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", )
OpenAPI.property_type(::Type{ DatasetFullBreakdownsBreakdownValuesInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetFullBreakdownsBreakdownValuesInner[name]))}

function check_required(o::DatasetFullBreakdownsBreakdownValuesInner)
    true
end

function OpenAPI.validate_property(::Type{ DatasetFullBreakdownsBreakdownValuesInner }, name::Symbol, val)
end
