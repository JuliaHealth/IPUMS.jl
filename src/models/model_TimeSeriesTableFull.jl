# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TimeSeriesTableFull

    TimeSeriesTableFull(;
        name=nothing,
        description=nothing,
        geographicIntegration=nothing,
        sequence=nothing,
        timeSeries=nothing,
        geogLevels=nothing,
    )

    - name::String
    - description::String
    - geographicIntegration::String
    - sequence::Float32
    - timeSeries::Vector{TimeSeriesTableFullTimeSeriesInner}
    - geogLevels::Vector{TimeSeriesTableFullTimeSeriesInner}
"""
Base.@kwdef mutable struct TimeSeriesTableFull <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    geographicIntegration::Union{Nothing, String} = nothing
    sequence::Union{Nothing, Float32} = nothing
    timeSeries::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TimeSeriesTableFullTimeSeriesInner} }
    geogLevels::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TimeSeriesTableFullTimeSeriesInner} }

    function TimeSeriesTableFull(name, description, geographicIntegration, sequence, timeSeries, geogLevels, )
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("name"), name)
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("description"), description)
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("geographicIntegration"), geographicIntegration)
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("sequence"), sequence)
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("timeSeries"), timeSeries)
        OpenAPI.validate_property(TimeSeriesTableFull, Symbol("geogLevels"), geogLevels)
        return new(name, description, geographicIntegration, sequence, timeSeries, geogLevels, )
    end
end # type TimeSeriesTableFull

const _property_types_TimeSeriesTableFull = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", Symbol("geographicIntegration")=>"String", Symbol("sequence")=>"Float32", Symbol("timeSeries")=>"Vector{TimeSeriesTableFullTimeSeriesInner}", Symbol("geogLevels")=>"Vector{TimeSeriesTableFullTimeSeriesInner}", )
OpenAPI.property_type(::Type{ TimeSeriesTableFull }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TimeSeriesTableFull[name]))}

function check_required(o::TimeSeriesTableFull)
    true
end

function OpenAPI.validate_property(::Type{ TimeSeriesTableFull }, name::Symbol, val)
end
