# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


"""
```
DataExtractDownloadLinks(;
    codebookPreview=nothing,
    tableData=nothing,
    gisData=nothing,
)
```
This function provides the download links for a census extract's codebook, CSV data, and Shapefile.

# Arguments

- `codebookPreview::String`- **(Optional)** HTTP link to preview of the codebook used to encode the census data
- `tableData::String`- **(Optional)** HTTP link to the NHGIS CSV data file for download
- `gisData::String`- **(Optional)** HTTP link to the NHGIS Shapefile for download

# Returns

The function returns a `DataExtractDownloadLinks` object containing the links for download.
    
# Examples

```julia-repl
julia> IPUMS.DataExtractDownloadLinks(codebookPreview = "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_csv_PREVIEW.zip",
                           tableData = "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_csv.zip",
                           gisData = "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_shape.zip")

# Output

{
  "codebookPreview": "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_csv_PREVIEW.zip",
  "tableData": "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_csv.zip",
  "gisData": "https://api.ipums.org/downloads/nhgis/api/v1/extracts/1234567/nhgis0007_shape.zip"
}
```

# References
For additional information on Dataset creation and download, consults the [IPUMS Developer Docs](https://developer.ipums.org/docs/v2/workflows/create_extracts/microdata)
"""
Base.@kwdef mutable struct DataExtractDownloadLinks <: OpenAPI.APIModel
    codebookPreview::Union{Nothing, String} = nothing
    tableData::Union{Nothing, String} = nothing
    gisData::Union{Nothing, String} = nothing

    function DataExtractDownloadLinks(codebookPreview, tableData, gisData, )
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("codebookPreview"), codebookPreview)
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("tableData"), tableData)
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("gisData"), gisData)
        return new(codebookPreview, tableData, gisData, )
    end
end # type DataExtractDownloadLinks

const _property_types_DataExtractDownloadLinks = Dict{Symbol,String}(Symbol("codebookPreview")=>"String", Symbol("tableData")=>"String", Symbol("gisData")=>"String", )
OpenAPI.property_type(::Type{ DataExtractDownloadLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataExtractDownloadLinks[name]))}

function check_required(o::DataExtractDownloadLinks)
    true
end

function OpenAPI.validate_property(::Type{ DataExtractDownloadLinks }, name::Symbol, val)
end
