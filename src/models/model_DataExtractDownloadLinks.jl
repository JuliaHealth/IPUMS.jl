# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataExtract_downloadLinks

    DataExtractDownloadLinks(;
        codebookPreview=nothing,
        tableData=nothing,
        gisData=nothing,
    )

    - codebookPreview::String
    - tableData::String
    - gisData::String
"""
Base.@kwdef mutable struct DataExtractDownloadLinks <: OpenAPI.APIModel
    codebookPreview::Union{Nothing, String} = nothing
    tableData::Union{Nothing, String} = nothing
    gisData::Union{Nothing, String} = nothing

    function DataExtractDownloadLinks(codebookPreview, tableData, gisData, )
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("codebookPreview"), codebookPreview)
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("tableData"), tableData)
        OpenAPI.validate_property(DataExtractDownloadLinks, Symbol("gisData"), gisData)
        return new(codebookPreview, tableData, gisData, )
    end
end # type DataExtractDownloadLinks

const _property_types_DataExtractDownloadLinks = Dict{Symbol,String}(Symbol("codebookPreview")=>"String", Symbol("tableData")=>"String", Symbol("gisData")=>"String", )
OpenAPI.property_type(::Type{ DataExtractDownloadLinks }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataExtractDownloadLinks[name]))}

function check_required(o::DataExtractDownloadLinks)
    true
end

function OpenAPI.validate_property(::Type{ DataExtractDownloadLinks }, name::Symbol, val)
end
