# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DatasetFull_geogLevels_inner

    DatasetFullGeogLevelsInner(;
        name=nothing,
        description=nothing,
        hasGeogExtentSelection=nothing,
    )

    - name::String
    - description::String
    - hasGeogExtentSelection::Bool
"""
Base.@kwdef mutable struct DatasetFullGeogLevelsInner <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    hasGeogExtentSelection::Union{Nothing, Bool} = nothing

    function DatasetFullGeogLevelsInner(name, description, hasGeogExtentSelection, )
        OpenAPI.validate_property(DatasetFullGeogLevelsInner, Symbol("name"), name)
        OpenAPI.validate_property(DatasetFullGeogLevelsInner, Symbol("description"), description)
        OpenAPI.validate_property(DatasetFullGeogLevelsInner, Symbol("hasGeogExtentSelection"), hasGeogExtentSelection)
        return new(name, description, hasGeogExtentSelection, )
    end
end # type DatasetFullGeogLevelsInner

const _property_types_DatasetFullGeogLevelsInner = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", Symbol("hasGeogExtentSelection")=>"Bool", )
OpenAPI.property_type(::Type{ DatasetFullGeogLevelsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetFullGeogLevelsInner[name]))}

function check_required(o::DatasetFullGeogLevelsInner)
    true
end

function OpenAPI.validate_property(::Type{ DatasetFullGeogLevelsInner }, name::Symbol, val)
end
