# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DatasetFull_breakdowns

    DatasetFullBreakdowns(;
        name=nothing,
        type=nothing,
        description=nothing,
        breakdownValues=nothing,
        years=nothing,
        geographicInstances=nothing,
    )

    - name::String
    - type::String
    - description::String
    - breakdownValues::Vector{DatasetFullBreakdownsBreakdownValuesInner}
    - years::Vector{String}
    - geographicInstances::Vector{DatasetFullBreakdownsBreakdownValuesInner}
"""
Base.@kwdef mutable struct DatasetFullBreakdowns <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    breakdownValues::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DatasetFullBreakdownsBreakdownValuesInner} }
    years::Union{Nothing, Vector{String}} = nothing
    geographicInstances::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DatasetFullBreakdownsBreakdownValuesInner} }

    function DatasetFullBreakdowns(name, type, description, breakdownValues, years, geographicInstances, )
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("name"), name)
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("type"), type)
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("description"), description)
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("breakdownValues"), breakdownValues)
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("years"), years)
        OpenAPI.validate_property(DatasetFullBreakdowns, Symbol("geographicInstances"), geographicInstances)
        return new(name, type, description, breakdownValues, years, geographicInstances, )
    end
end # type DatasetFullBreakdowns

const _property_types_DatasetFullBreakdowns = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("description")=>"String", Symbol("breakdownValues")=>"Vector{DatasetFullBreakdownsBreakdownValuesInner}", Symbol("years")=>"Vector{String}", Symbol("geographicInstances")=>"Vector{DatasetFullBreakdownsBreakdownValuesInner}", )
OpenAPI.property_type(::Type{ DatasetFullBreakdowns }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetFullBreakdowns[name]))}

function check_required(o::DatasetFullBreakdowns)
    true
end

function OpenAPI.validate_property(::Type{ DatasetFullBreakdowns }, name::Symbol, val)
end
