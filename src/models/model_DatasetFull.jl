# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DatasetFull

    DatasetFull(;
        name=nothing,
        description=nothing,
        group=nothing,
        sequence=nothing,
        dataTables=nothing,
        geogLevels=nothing,
        hasMultipleDataTypes=nothing,
        breakdowns=nothing,
    )

    - name::String
    - description::String
    - group::String
    - sequence::Int64
    - dataTables::Vector{DataTableSimple}
    - geogLevels::Vector{DatasetFullGeogLevelsInner}
    - hasMultipleDataTypes::Bool
    - breakdowns::DatasetFullBreakdowns
"""
Base.@kwdef mutable struct DatasetFull <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    group::Union{Nothing, String} = nothing
    sequence::Union{Nothing, Int64} = nothing
    dataTables::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DataTableSimple} }
    geogLevels::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DatasetFullGeogLevelsInner} }
    hasMultipleDataTypes::Union{Nothing, Bool} = nothing
    breakdowns = nothing # spec type: Union{ Nothing, DatasetFullBreakdowns }

    function DatasetFull(name, description, group, sequence, dataTables, geogLevels, hasMultipleDataTypes, breakdowns, )
        OpenAPI.validate_property(DatasetFull, Symbol("name"), name)
        OpenAPI.validate_property(DatasetFull, Symbol("description"), description)
        OpenAPI.validate_property(DatasetFull, Symbol("group"), group)
        OpenAPI.validate_property(DatasetFull, Symbol("sequence"), sequence)
        OpenAPI.validate_property(DatasetFull, Symbol("dataTables"), dataTables)
        OpenAPI.validate_property(DatasetFull, Symbol("geogLevels"), geogLevels)
        OpenAPI.validate_property(DatasetFull, Symbol("hasMultipleDataTypes"), hasMultipleDataTypes)
        OpenAPI.validate_property(DatasetFull, Symbol("breakdowns"), breakdowns)
        return new(name, description, group, sequence, dataTables, geogLevels, hasMultipleDataTypes, breakdowns, )
    end
end # type DatasetFull

const _property_types_DatasetFull = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("description")=>"String", Symbol("group")=>"String", Symbol("sequence")=>"Int64", Symbol("dataTables")=>"Vector{DataTableSimple}", Symbol("geogLevels")=>"Vector{DatasetFullGeogLevelsInner}", Symbol("hasMultipleDataTypes")=>"Bool", Symbol("breakdowns")=>"DatasetFullBreakdowns", )
OpenAPI.property_type(::Type{ DatasetFull }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DatasetFull[name]))}

function check_required(o::DatasetFull)
    true
end

function OpenAPI.validate_property(::Type{ DatasetFull }, name::Symbol, val)
end
